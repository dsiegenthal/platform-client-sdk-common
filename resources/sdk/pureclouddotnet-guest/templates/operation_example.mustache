{{#operation}}using System;
using System.Diagnostics;
using {{packageName}}.Api;
using {{packageName}}.Client;
using {{packageName}}.Model;

namespace Example
{
    public class {{operationId}}Example
    {
        public void main()
        { {{#hasAuthMethods}}{{#authMethods}}{{#isBasic}}
            // Configure HTTP basic authorization: {{{name}}}
            Configuration.Default.Username = 'YOUR_USERNAME';
            Configuration.Default.Password = 'YOUR_PASSWORD';{{/isBasic}}{{#isApiKey}}
            // Configure API key authorization: {{{name}}}
            Configuration.Default.ApiKey.Add('{{{keyParamName}}}', 'YOUR_API_KEY');
            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed
            // Configuration.Default.ApiKeyPrefix.Add('{{{keyParamName}}}', 'BEARER');{{/isApiKey}}{{#isOAuth}}
            // Configure OAuth2 access token for authorization: {{{name}}}
            // The following example is using the Authorization Code Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6",
                "M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo",
                "http://redirecturi.com/",
                "6Zxcb0oASMBI55wQJ6bVmOmO57k8CxXBKgzDKtYXbtk");{{/isOAuth}}{{/authMethods}}{{/hasAuthMethods}}

            var apiInstance = new {{classname}}();{{#allParams}}{{#isPrimitiveType}}
            var {{paramName}} = {{example}};  // {{{dataType}}} | {{{description}}}{{^required}} (optional) {{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}{{/isPrimitiveType}}{{^isPrimitiveType}}
            var {{paramName}} = new {{{dataType}}}(); // {{{dataType}}} | {{{description}}}{{^required}} (optional) {{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}{{/isPrimitiveType}}{{/allParams}}

            try
            { {{#summary}}
                // {{{.}}}{{/summary}}
                {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{#returnType}}
                Debug.WriteLine(result);{{/returnType}}
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling {{classname}}.{{operationId}}: " + e.Message );
            }
        }
    }
}{{/operation}}